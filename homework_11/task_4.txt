Завдання 4

	Часова складність додавання елементу в словник у нотації Великого О - O(1)

Ця залежність є константною, оскільки при додаванні елементу виконується хешування ключа, 
що займає сталий час, та додавання пари "ключ-значення" до хеш-таблиці, що також займає сталий час.
Хеш-таблиці використовують хеш-функції для розрахунку індексу, за яким зберігається елемент, 
і операції вставки елементу в таблицю зазвичай займають O(1) часу. Відповідно, час додавання 
елементу буде залежати від часу, необхідного для розрахунку хеш-функції та вставки елементу 
в таблицю, але не від кількості елементів.


	Але є випадки, коли часова складнність додавання елементу в словник може бути O(n):
	
	1) Перерозподіл пам'яті
Під час створення порожнього словника виділяється початковий блок пам'яті певного розміру. 
Коли словник заповнюється елементами, Python може динамічно збільшувати розмір блоку пам'яті, 
щоб забезпечити достатньо місця для зберігання всіх елементів.
Коли словник заповнюється елементами та розмір блоку пам'яті закінчується, Python виділяє новий 
блок пам'яті більшого розміру, копіює всі елементи зі старого блоку в новий та звільняє старий блок.
Цей процес називається перерозподілом пам'яті. Процес перерозподілу пам'яті вимагає копіювання 
всіх елементів, що займає час та ресурси. Тому, в такому випадку часова складність додавання 
елементу в словник у нотації Великого О може бути O(n), де n - кількість елементів в словнику

	2) Коли два або більше ключів в словнику мають однаковий хеш-код
 Коли два або більше ключів в словнику мають однаковий хеш-код, то вони повинні бути збережені в 
 тій же самій "корзині" хеш-таблиці. Це може призвести до потреби в ітерації через ці елементи для 
 знаходження потрібного ключа. Тому, чим більше колізій в хеш-таблиці, тим більше часу займає 
 додавання нового елементу. В такому випадку час додавання елементу в словник може бути оцінений 
 як O(n), де n - кількість елементів, які потрібно ітерувати для розв'язання колізії.
 